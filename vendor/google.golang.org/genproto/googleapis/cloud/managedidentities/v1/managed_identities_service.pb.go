// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/managedidentities/v1/managed_identities_service.proto

package managedidentities

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	longrunning "google.golang.org/genproto/googleapis/longrunning"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Represents the metadata of the long-running operation.
type OpMetadata struct {
	// Output only. The time the operation was created.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time the operation finished running.
	EndTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Output only. Server-defined resource path for the target of the operation.
	Target string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	// Output only. Name of the verb executed by the operation.
	Verb string `protobuf:"bytes,4,opt,name=verb,proto3" json:"verb,omitempty"`
	// Output only. Identifies whether the user has requested cancellation
	// of the operation. Operations that have successfully been cancelled
	// have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
	// corresponding to `Code.CANCELLED`.
	RequestedCancellation bool `protobuf:"varint,5,opt,name=requested_cancellation,json=requestedCancellation,proto3" json:"requested_cancellation,omitempty"`
	// Output only. API version used to start the operation.
	ApiVersion           string   `protobuf:"bytes,6,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpMetadata) Reset()         { *m = OpMetadata{} }
func (m *OpMetadata) String() string { return proto.CompactTextString(m) }
func (*OpMetadata) ProtoMessage()    {}
func (*OpMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{0}
}

func (m *OpMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpMetadata.Unmarshal(m, b)
}
func (m *OpMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpMetadata.Marshal(b, m, deterministic)
}
func (m *OpMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpMetadata.Merge(m, src)
}
func (m *OpMetadata) XXX_Size() int {
	return xxx_messageInfo_OpMetadata.Size(m)
}
func (m *OpMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_OpMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_OpMetadata proto.InternalMessageInfo

func (m *OpMetadata) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *OpMetadata) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *OpMetadata) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *OpMetadata) GetVerb() string {
	if m != nil {
		return m.Verb
	}
	return ""
}

func (m *OpMetadata) GetRequestedCancellation() bool {
	if m != nil {
		return m.RequestedCancellation
	}
	return false
}

func (m *OpMetadata) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

// Request message for
// [CreateMicrosoftAdDomain][google.cloud.managedidentities.v1.CreateMicrosoftAdDomain]
type CreateMicrosoftAdDomainRequest struct {
	// Required. The resource project name and location using the form:
	// `projects/{project_id}/locations/global`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The fully qualified domain name.
	// e.g. mydomain.myorganization.com, with the following restrictions:
	//
	//  * Must contain only lowercase letters, numbers, periods and hyphens.
	//  * Must start with a letter.
	//  * Must contain between 2-64 characters.
	//  * Must end with a number or a letter.
	//  * Must not start with period.
	//  * First segement length (mydomain form example above) shouldn't exceed
	//    15 chars.
	//  * The last segment cannot be fully numeric.
	//  * Must be unique within the customer project.
	DomainName string `protobuf:"bytes,2,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	// Required. A Managed Identity domain resource.
	Domain               *Domain  `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMicrosoftAdDomainRequest) Reset()         { *m = CreateMicrosoftAdDomainRequest{} }
func (m *CreateMicrosoftAdDomainRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMicrosoftAdDomainRequest) ProtoMessage()    {}
func (*CreateMicrosoftAdDomainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{1}
}

func (m *CreateMicrosoftAdDomainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMicrosoftAdDomainRequest.Unmarshal(m, b)
}
func (m *CreateMicrosoftAdDomainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMicrosoftAdDomainRequest.Marshal(b, m, deterministic)
}
func (m *CreateMicrosoftAdDomainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMicrosoftAdDomainRequest.Merge(m, src)
}
func (m *CreateMicrosoftAdDomainRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMicrosoftAdDomainRequest.Size(m)
}
func (m *CreateMicrosoftAdDomainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMicrosoftAdDomainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMicrosoftAdDomainRequest proto.InternalMessageInfo

func (m *CreateMicrosoftAdDomainRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateMicrosoftAdDomainRequest) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *CreateMicrosoftAdDomainRequest) GetDomain() *Domain {
	if m != nil {
		return m.Domain
	}
	return nil
}

// Request message for
// [ResetAdminPassword][google.cloud.managedidentities.v1.ResetAdminPassword]
type ResetAdminPasswordRequest struct {
	// Required. The domain resource name using the form:
	// `projects/{project_id}/locations/global/domains/{domain_name}`
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetAdminPasswordRequest) Reset()         { *m = ResetAdminPasswordRequest{} }
func (m *ResetAdminPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ResetAdminPasswordRequest) ProtoMessage()    {}
func (*ResetAdminPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{2}
}

func (m *ResetAdminPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetAdminPasswordRequest.Unmarshal(m, b)
}
func (m *ResetAdminPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetAdminPasswordRequest.Marshal(b, m, deterministic)
}
func (m *ResetAdminPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetAdminPasswordRequest.Merge(m, src)
}
func (m *ResetAdminPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ResetAdminPasswordRequest.Size(m)
}
func (m *ResetAdminPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetAdminPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetAdminPasswordRequest proto.InternalMessageInfo

func (m *ResetAdminPasswordRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Response message for
// [ResetAdminPassword][google.cloud.managedidentities.v1.ResetAdminPassword]
type ResetAdminPasswordResponse struct {
	// A random password. See [admin][google.cloud.managedidentities.v1.Domain.admin] for more information.
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetAdminPasswordResponse) Reset()         { *m = ResetAdminPasswordResponse{} }
func (m *ResetAdminPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*ResetAdminPasswordResponse) ProtoMessage()    {}
func (*ResetAdminPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{3}
}

func (m *ResetAdminPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetAdminPasswordResponse.Unmarshal(m, b)
}
func (m *ResetAdminPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetAdminPasswordResponse.Marshal(b, m, deterministic)
}
func (m *ResetAdminPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetAdminPasswordResponse.Merge(m, src)
}
func (m *ResetAdminPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_ResetAdminPasswordResponse.Size(m)
}
func (m *ResetAdminPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetAdminPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetAdminPasswordResponse proto.InternalMessageInfo

func (m *ResetAdminPasswordResponse) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// Request message for
// [ListDomains][google.cloud.managedidentities.v1.ListDomains]
type ListDomainsRequest struct {
	// Required. The resource name of the domain location using the form:
	// `projects/{project_id}/locations/global`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Optional. The maximum number of items to return.
	// If not specified, a default value of 1000 will be used.
	// Regardless of the page_size value, the response may include a partial list.
	// Callers should rely on a response's
	// [next_page_token][google.cloud.managedidentities.v1.ListDomainsResponse.next_page_token]
	// to determine if there are additional results to list.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. The `next_page_token` value returned from a previous ListDomainsRequest
	// request, if any.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Optional. A filter specifying constraints of a list operation.
	// For example, `Domain.fqdn="mydomain.myorginization"`.
	Filter string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	// Optional. Specifies the ordering of results. See
	// [Sorting
	// order](https://cloud.google.com/apis/design/design_patterns#sorting_order)
	// for more information.
	OrderBy              string   `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDomainsRequest) Reset()         { *m = ListDomainsRequest{} }
func (m *ListDomainsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDomainsRequest) ProtoMessage()    {}
func (*ListDomainsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{4}
}

func (m *ListDomainsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDomainsRequest.Unmarshal(m, b)
}
func (m *ListDomainsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDomainsRequest.Marshal(b, m, deterministic)
}
func (m *ListDomainsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDomainsRequest.Merge(m, src)
}
func (m *ListDomainsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDomainsRequest.Size(m)
}
func (m *ListDomainsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDomainsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDomainsRequest proto.InternalMessageInfo

func (m *ListDomainsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListDomainsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListDomainsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListDomainsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListDomainsRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

// Response message for
// [ListDomains][google.cloud.managedidentities.v1.ListDomains]
type ListDomainsResponse struct {
	// A list of Managed Identities Service domains in the project.
	Domains []*Domain `protobuf:"bytes,1,rep,name=domains,proto3" json:"domains,omitempty"`
	// A token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// A list of locations that could not be reached.
	Unreachable          []string `protobuf:"bytes,3,rep,name=unreachable,proto3" json:"unreachable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDomainsResponse) Reset()         { *m = ListDomainsResponse{} }
func (m *ListDomainsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDomainsResponse) ProtoMessage()    {}
func (*ListDomainsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{5}
}

func (m *ListDomainsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDomainsResponse.Unmarshal(m, b)
}
func (m *ListDomainsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDomainsResponse.Marshal(b, m, deterministic)
}
func (m *ListDomainsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDomainsResponse.Merge(m, src)
}
func (m *ListDomainsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDomainsResponse.Size(m)
}
func (m *ListDomainsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDomainsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDomainsResponse proto.InternalMessageInfo

func (m *ListDomainsResponse) GetDomains() []*Domain {
	if m != nil {
		return m.Domains
	}
	return nil
}

func (m *ListDomainsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListDomainsResponse) GetUnreachable() []string {
	if m != nil {
		return m.Unreachable
	}
	return nil
}

// Request message for [GetDomain][google.cloud.managedidentities.v1.GetDomain]
type GetDomainRequest struct {
	// Required. The domain resource name using the form:
	// `projects/{project_id}/locations/global/domains/{domain_name}`
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDomainRequest) Reset()         { *m = GetDomainRequest{} }
func (m *GetDomainRequest) String() string { return proto.CompactTextString(m) }
func (*GetDomainRequest) ProtoMessage()    {}
func (*GetDomainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{6}
}

func (m *GetDomainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDomainRequest.Unmarshal(m, b)
}
func (m *GetDomainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDomainRequest.Marshal(b, m, deterministic)
}
func (m *GetDomainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDomainRequest.Merge(m, src)
}
func (m *GetDomainRequest) XXX_Size() int {
	return xxx_messageInfo_GetDomainRequest.Size(m)
}
func (m *GetDomainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDomainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDomainRequest proto.InternalMessageInfo

func (m *GetDomainRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request message for
// [UpdateDomain][google.cloud.managedidentities.v1.UpdateDomain]
type UpdateDomainRequest struct {
	// Required. Mask of fields to update. At least one path must be supplied in this
	// field. The elements of the repeated paths field may only include
	// fields from [Domain][google.cloud.managedidentities.v1.Domain]:
	//  * `labels`
	//  * `locations`
	//  * `authorized_networks`
	UpdateMask *field_mask.FieldMask `protobuf:"bytes,1,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// Required. Domain message with updated fields. Only supported fields specified in
	// update_mask are updated.
	Domain               *Domain  `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDomainRequest) Reset()         { *m = UpdateDomainRequest{} }
func (m *UpdateDomainRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDomainRequest) ProtoMessage()    {}
func (*UpdateDomainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{7}
}

func (m *UpdateDomainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDomainRequest.Unmarshal(m, b)
}
func (m *UpdateDomainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDomainRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDomainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDomainRequest.Merge(m, src)
}
func (m *UpdateDomainRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDomainRequest.Size(m)
}
func (m *UpdateDomainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDomainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDomainRequest proto.InternalMessageInfo

func (m *UpdateDomainRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

func (m *UpdateDomainRequest) GetDomain() *Domain {
	if m != nil {
		return m.Domain
	}
	return nil
}

// Request message for
// [DeleteDomain][google.cloud.managedidentities.v1.DeleteDomain]
type DeleteDomainRequest struct {
	// Required. The domain resource name using the form:
	// `projects/{project_id}/locations/global/domains/{domain_name}`
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDomainRequest) Reset()         { *m = DeleteDomainRequest{} }
func (m *DeleteDomainRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDomainRequest) ProtoMessage()    {}
func (*DeleteDomainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{8}
}

func (m *DeleteDomainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDomainRequest.Unmarshal(m, b)
}
func (m *DeleteDomainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDomainRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDomainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDomainRequest.Merge(m, src)
}
func (m *DeleteDomainRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDomainRequest.Size(m)
}
func (m *DeleteDomainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDomainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDomainRequest proto.InternalMessageInfo

func (m *DeleteDomainRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request message for
// [AttachTrust][google.cloud.managedidentities.v1.AttachTrust]
type AttachTrustRequest struct {
	// Required. The resource domain name, project name and location using the form:
	// `projects/{project_id}/locations/global/domains/{domain_name}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The domain trust resource.
	Trust                *Trust   `protobuf:"bytes,2,opt,name=trust,proto3" json:"trust,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachTrustRequest) Reset()         { *m = AttachTrustRequest{} }
func (m *AttachTrustRequest) String() string { return proto.CompactTextString(m) }
func (*AttachTrustRequest) ProtoMessage()    {}
func (*AttachTrustRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{9}
}

func (m *AttachTrustRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachTrustRequest.Unmarshal(m, b)
}
func (m *AttachTrustRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachTrustRequest.Marshal(b, m, deterministic)
}
func (m *AttachTrustRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachTrustRequest.Merge(m, src)
}
func (m *AttachTrustRequest) XXX_Size() int {
	return xxx_messageInfo_AttachTrustRequest.Size(m)
}
func (m *AttachTrustRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachTrustRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttachTrustRequest proto.InternalMessageInfo

func (m *AttachTrustRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AttachTrustRequest) GetTrust() *Trust {
	if m != nil {
		return m.Trust
	}
	return nil
}

// Request message for
// [ReconfigureTrust][google.cloud.managedidentities.v1.ReconfigureTrust]
type ReconfigureTrustRequest struct {
	// Required. The resource domain name, project name and location using the form:
	// `projects/{project_id}/locations/global/domains/{domain_name}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The fully-qualified target domain name which will be in trust with current
	// domain.
	TargetDomainName string `protobuf:"bytes,2,opt,name=target_domain_name,json=targetDomainName,proto3" json:"target_domain_name,omitempty"`
	// Required. The target DNS server IP addresses to resolve the remote domain involved
	// in the trust.
	TargetDnsIpAddresses []string `protobuf:"bytes,3,rep,name=target_dns_ip_addresses,json=targetDnsIpAddresses,proto3" json:"target_dns_ip_addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReconfigureTrustRequest) Reset()         { *m = ReconfigureTrustRequest{} }
func (m *ReconfigureTrustRequest) String() string { return proto.CompactTextString(m) }
func (*ReconfigureTrustRequest) ProtoMessage()    {}
func (*ReconfigureTrustRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{10}
}

func (m *ReconfigureTrustRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReconfigureTrustRequest.Unmarshal(m, b)
}
func (m *ReconfigureTrustRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReconfigureTrustRequest.Marshal(b, m, deterministic)
}
func (m *ReconfigureTrustRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReconfigureTrustRequest.Merge(m, src)
}
func (m *ReconfigureTrustRequest) XXX_Size() int {
	return xxx_messageInfo_ReconfigureTrustRequest.Size(m)
}
func (m *ReconfigureTrustRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReconfigureTrustRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReconfigureTrustRequest proto.InternalMessageInfo

func (m *ReconfigureTrustRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReconfigureTrustRequest) GetTargetDomainName() string {
	if m != nil {
		return m.TargetDomainName
	}
	return ""
}

func (m *ReconfigureTrustRequest) GetTargetDnsIpAddresses() []string {
	if m != nil {
		return m.TargetDnsIpAddresses
	}
	return nil
}

// Request message for
// [DetachTrust][google.cloud.managedidentities.v1.DetachTrust]
type DetachTrustRequest struct {
	// Required. The resource domain name, project name, and location using the form:
	// `projects/{project_id}/locations/global/domains/{domain_name}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The domain trust resource to removed.
	Trust                *Trust   `protobuf:"bytes,2,opt,name=trust,proto3" json:"trust,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetachTrustRequest) Reset()         { *m = DetachTrustRequest{} }
func (m *DetachTrustRequest) String() string { return proto.CompactTextString(m) }
func (*DetachTrustRequest) ProtoMessage()    {}
func (*DetachTrustRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{11}
}

func (m *DetachTrustRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetachTrustRequest.Unmarshal(m, b)
}
func (m *DetachTrustRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetachTrustRequest.Marshal(b, m, deterministic)
}
func (m *DetachTrustRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetachTrustRequest.Merge(m, src)
}
func (m *DetachTrustRequest) XXX_Size() int {
	return xxx_messageInfo_DetachTrustRequest.Size(m)
}
func (m *DetachTrustRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DetachTrustRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DetachTrustRequest proto.InternalMessageInfo

func (m *DetachTrustRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DetachTrustRequest) GetTrust() *Trust {
	if m != nil {
		return m.Trust
	}
	return nil
}

// Request message for
// [ValidateTrust][google.cloud.managedidentities.v1.ValidateTrust]
type ValidateTrustRequest struct {
	// Required. The resource domain name, project name, and location using the form:
	// `projects/{project_id}/locations/global/domains/{domain_name}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The domain trust to validate trust state for.
	Trust                *Trust   `protobuf:"bytes,2,opt,name=trust,proto3" json:"trust,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateTrustRequest) Reset()         { *m = ValidateTrustRequest{} }
func (m *ValidateTrustRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateTrustRequest) ProtoMessage()    {}
func (*ValidateTrustRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e30133f18884023, []int{12}
}

func (m *ValidateTrustRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateTrustRequest.Unmarshal(m, b)
}
func (m *ValidateTrustRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateTrustRequest.Marshal(b, m, deterministic)
}
func (m *ValidateTrustRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateTrustRequest.Merge(m, src)
}
func (m *ValidateTrustRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateTrustRequest.Size(m)
}
func (m *ValidateTrustRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateTrustRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateTrustRequest proto.InternalMessageInfo

func (m *ValidateTrustRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ValidateTrustRequest) GetTrust() *Trust {
	if m != nil {
		return m.Trust
	}
	return nil
}

func init() {
	proto.RegisterType((*OpMetadata)(nil), "google.cloud.managedidentities.v1.OpMetadata")
	proto.RegisterType((*CreateMicrosoftAdDomainRequest)(nil), "google.cloud.managedidentities.v1.CreateMicrosoftAdDomainRequest")
	proto.RegisterType((*ResetAdminPasswordRequest)(nil), "google.cloud.managedidentities.v1.ResetAdminPasswordRequest")
	proto.RegisterType((*ResetAdminPasswordResponse)(nil), "google.cloud.managedidentities.v1.ResetAdminPasswordResponse")
	proto.RegisterType((*ListDomainsRequest)(nil), "google.cloud.managedidentities.v1.ListDomainsRequest")
	proto.RegisterType((*ListDomainsResponse)(nil), "google.cloud.managedidentities.v1.ListDomainsResponse")
	proto.RegisterType((*GetDomainRequest)(nil), "google.cloud.managedidentities.v1.GetDomainRequest")
	proto.RegisterType((*UpdateDomainRequest)(nil), "google.cloud.managedidentities.v1.UpdateDomainRequest")
	proto.RegisterType((*DeleteDomainRequest)(nil), "google.cloud.managedidentities.v1.DeleteDomainRequest")
	proto.RegisterType((*AttachTrustRequest)(nil), "google.cloud.managedidentities.v1.AttachTrustRequest")
	proto.RegisterType((*ReconfigureTrustRequest)(nil), "google.cloud.managedidentities.v1.ReconfigureTrustRequest")
	proto.RegisterType((*DetachTrustRequest)(nil), "google.cloud.managedidentities.v1.DetachTrustRequest")
	proto.RegisterType((*ValidateTrustRequest)(nil), "google.cloud.managedidentities.v1.ValidateTrustRequest")
}

func init() {
	proto.RegisterFile("google/cloud/managedidentities/v1/managed_identities_service.proto", fileDescriptor_5e30133f18884023)
}

var fileDescriptor_5e30133f18884023 = []byte{
	// 1276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0x51, 0x6f, 0x1b, 0xc5,
	0x16, 0xd6, 0x38, 0x69, 0x9a, 0x8c, 0x6f, 0x75, 0xa3, 0x69, 0x7b, 0xe3, 0xeb, 0x7b, 0x5b, 0xdc,
	0x2d, 0xa0, 0x10, 0xc4, 0x6e, 0x93, 0x02, 0xad, 0x4c, 0x8b, 0xea, 0x38, 0xb4, 0x54, 0x22, 0x6d,
	0xe4, 0x86, 0x20, 0xa1, 0x8a, 0x65, 0xbc, 0x7b, 0xb2, 0x59, 0xba, 0x9e, 0x59, 0x66, 0xc6, 0x0e,
	0x2d, 0xea, 0x0b, 0x7f, 0x81, 0x1f, 0x80, 0xa8, 0xe0, 0x05, 0x5e, 0x11, 0x7f, 0x00, 0xf1, 0xd0,
	0x3e, 0x16, 0x7e, 0x00, 0x48, 0xbc, 0xf1, 0x27, 0xd0, 0xce, 0xec, 0xc6, 0x6b, 0x3b, 0x8e, 0xd7,
	0xad, 0xd4, 0xc7, 0x3d, 0x73, 0xce, 0x99, 0xef, 0x3b, 0xe7, 0xcc, 0xf9, 0x12, 0xe3, 0xf5, 0x80,
	0xf3, 0x20, 0x02, 0xc7, 0x8b, 0x78, 0xd7, 0x77, 0x3a, 0x94, 0xd1, 0x00, 0xfc, 0xd0, 0x07, 0xa6,
	0x42, 0x15, 0x82, 0x74, 0x7a, 0xab, 0x99, 0xd1, 0xed, 0x5b, 0x5d, 0x09, 0xa2, 0x17, 0x7a, 0x60,
	0xc7, 0x82, 0x2b, 0x4e, 0xce, 0x99, 0x1c, 0xb6, 0xce, 0x61, 0x8f, 0xe4, 0xb0, 0x7b, 0xab, 0xd5,
	0xff, 0xa7, 0xd7, 0xd0, 0x38, 0x74, 0x28, 0x63, 0x5c, 0x51, 0x15, 0x72, 0x26, 0x4d, 0x82, 0xea,
	0x4b, 0xb9, 0xd3, 0xdd, 0x10, 0x22, 0xdf, 0x6d, 0xc3, 0x1e, 0xed, 0x85, 0x5c, 0xa4, 0x0e, 0x17,
	0x26, 0xa3, 0x14, 0x20, 0x79, 0x57, 0x64, 0x98, 0xaa, 0xe7, 0xd3, 0x88, 0x88, 0xb3, 0x40, 0x74,
	0x19, 0x0b, 0x59, 0xe0, 0xf0, 0x18, 0xc4, 0xc0, 0xbd, 0xb5, 0xd4, 0x49, 0x7f, 0xb5, 0xbb, 0xbb,
	0xe9, 0xe5, 0x1d, 0x2a, 0xef, 0x0d, 0x21, 0x3b, 0xf0, 0x50, 0x61, 0x07, 0xa4, 0xa2, 0x9d, 0x38,
	0x75, 0x58, 0xca, 0x41, 0xf7, 0xa2, 0x10, 0x98, 0x32, 0x07, 0xd6, 0xa3, 0x12, 0xc6, 0xb7, 0xe3,
	0x4d, 0x50, 0xd4, 0xa7, 0x8a, 0x92, 0x6b, 0xb8, 0xec, 0x09, 0xa0, 0x0a, 0xdc, 0x24, 0x43, 0x05,
	0xd5, 0xd0, 0x72, 0x79, 0xad, 0x6a, 0xa7, 0x95, 0xcb, 0xd2, 0xdb, 0xdb, 0x59, 0xfa, 0xf5, 0x99,
	0x3f, 0x1a, 0x33, 0x2d, 0x6c, 0x62, 0x12, 0x2b, 0xa9, 0xe3, 0x79, 0x60, 0xbe, 0x09, 0x2f, 0x15,
	0x0b, 0x3f, 0x0e, 0xcc, 0xd7, 0xb1, 0xff, 0xc3, 0x73, 0x8a, 0x8a, 0x00, 0x54, 0x65, 0xa6, 0x86,
	0x96, 0x17, 0xcc, 0x69, 0x6a, 0x22, 0x4b, 0x78, 0xb6, 0x07, 0xa2, 0x5d, 0x99, 0xed, 0x1f, 0x69,
	0x03, 0xa9, 0xe3, 0xff, 0x08, 0xf8, 0xbc, 0x0b, 0x52, 0x81, 0xef, 0x7a, 0x94, 0x79, 0x10, 0x45,
	0xba, 0x7e, 0x95, 0x63, 0x35, 0xb4, 0x3c, 0x6f, 0x5c, 0x4f, 0x1f, 0xb8, 0x34, 0x73, 0x1e, 0xe4,
	0x65, 0x5c, 0xa6, 0x71, 0xe8, 0xf6, 0x40, 0xc8, 0x24, 0x60, 0xae, 0x9f, 0x1b, 0xd3, 0x38, 0xdc,
	0x31, 0x66, 0xeb, 0x47, 0x84, 0xcf, 0x36, 0x35, 0xc5, 0xcd, 0xd0, 0x13, 0x5c, 0xf2, 0x5d, 0xd5,
	0xf0, 0x37, 0x78, 0x87, 0x86, 0xac, 0x65, 0xd2, 0x26, 0xd0, 0x63, 0x2a, 0x80, 0x29, 0x5d, 0x33,
	0x9d, 0xa3, 0xd4, 0x4a, 0x4d, 0xc9, 0x2d, 0xbe, 0xf6, 0x76, 0x19, 0x4d, 0xcb, 0x92, 0x7a, 0x60,
	0x63, 0xbf, 0x45, 0x3b, 0x40, 0xae, 0xe3, 0x39, 0xf3, 0xa5, 0xd9, 0x97, 0xd7, 0x5e, 0xb3, 0x27,
	0x0e, 0xac, 0x6d, 0x40, 0xa4, 0xb7, 0x99, 0x68, 0xeb, 0x4d, 0xfc, 0xdf, 0x16, 0x48, 0x50, 0x0d,
	0xbf, 0x13, 0xb2, 0x2d, 0x2a, 0xe5, 0x3e, 0x17, 0x7e, 0x86, 0x73, 0x09, 0xcf, 0x6a, 0x0c, 0x39,
	0x94, 0xda, 0x60, 0x5d, 0xc6, 0xd5, 0xc3, 0xa2, 0x64, 0xcc, 0x99, 0x04, 0x52, 0xc5, 0xf3, 0x71,
	0x6a, 0x33, 0xa1, 0xad, 0x83, 0x6f, 0xeb, 0x27, 0x84, 0xc9, 0x07, 0xa1, 0x54, 0x06, 0x8b, 0x2c,
	0x54, 0x91, 0x1a, 0x5e, 0x88, 0x69, 0x00, 0xae, 0x0c, 0x1f, 0x98, 0x7a, 0x1c, 0x4b, 0xce, 0x51,
	0x92, 0x35, 0x80, 0x3b, 0xe1, 0x03, 0x20, 0x16, 0xc6, 0xda, 0x43, 0xf1, 0x7b, 0xc0, 0xfa, 0xf3,
	0x80, 0x5a, 0x3a, 0x70, 0x3b, 0xb1, 0x26, 0x57, 0xec, 0x86, 0x91, 0x02, 0xd1, 0x1f, 0x0a, 0xd4,
	0x4a, 0x4d, 0xe4, 0x2c, 0x9e, 0xe7, 0xc2, 0x07, 0xe1, 0xb6, 0xef, 0xeb, 0x41, 0x48, 0x8f, 0x8f,
	0x6b, 0xe3, 0xfa, 0x7d, 0xeb, 0x3b, 0x84, 0x4f, 0x0e, 0xc0, 0x4e, 0xa9, 0x36, 0xf1, 0x71, 0x53,
	0x48, 0x59, 0x41, 0xb5, 0x99, 0xa9, 0xfa, 0xd0, 0xca, 0x22, 0xc9, 0xab, 0xf8, 0xdf, 0x0c, 0xbe,
	0x50, 0x6e, 0x8e, 0x82, 0xee, 0x7a, 0xeb, 0x44, 0x62, 0xde, 0x3a, 0x60, 0x50, 0xc3, 0xe5, 0x2e,
	0x13, 0x40, 0xbd, 0x3d, 0xda, 0x8e, 0xa0, 0x32, 0x53, 0x9b, 0x59, 0x5e, 0x68, 0xe5, 0x4d, 0xd6,
	0xeb, 0x78, 0xf1, 0x06, 0xa8, 0xc1, 0x61, 0x1b, 0xdb, 0xc4, 0x6f, 0x10, 0x3e, 0xf9, 0x61, 0xec,
	0x53, 0x05, 0x83, 0x01, 0xd7, 0x70, 0xb9, 0xab, 0xcd, 0x7a, 0x69, 0x8c, 0x7d, 0xd6, 0xd7, 0x93,
	0xbd, 0xb2, 0x49, 0xe5, 0xbd, 0x74, 0x38, 0x4d, 0x4c, 0x62, 0xc8, 0x0d, 0x67, 0xe9, 0xb9, 0x86,
	0xd3, 0xc6, 0x27, 0x37, 0x20, 0x82, 0x61, 0x80, 0x63, 0x19, 0x09, 0x4c, 0x1a, 0x4a, 0x51, 0x6f,
	0x6f, 0x5b, 0x74, 0xa5, 0x9a, 0xe4, 0x4e, 0x9a, 0xf8, 0x98, 0x4a, 0x1c, 0x53, 0x94, 0xcb, 0x05,
	0x50, 0xea, 0xc4, 0x26, 0x87, 0x89, 0xb5, 0xbe, 0x45, 0x78, 0xa9, 0x05, 0x1e, 0x67, 0xbb, 0x61,
	0xd0, 0x15, 0x50, 0xec, 0xe6, 0x55, 0x4c, 0xcc, 0xa2, 0x72, 0xc7, 0x3c, 0xf5, 0x45, 0x73, 0xbc,
	0xd1, 0x7f, 0xf0, 0x75, 0xbc, 0x94, 0x85, 0x30, 0xe9, 0x86, 0xb1, 0x4b, 0x7d, 0x5f, 0x80, 0x94,
	0x20, 0xcd, 0x20, 0x98, 0xb8, 0x53, 0x69, 0x1c, 0x93, 0x37, 0xe3, 0x46, 0xe6, 0x90, 0xd4, 0x65,
	0x03, 0x5e, 0x70, 0x5d, 0x14, 0x3e, 0xb5, 0x43, 0xa3, 0x30, 0x99, 0x89, 0x17, 0x77, 0xeb, 0xda,
	0xe3, 0x45, 0x5c, 0xd9, 0x34, 0xae, 0x37, 0x0f, 0x5c, 0xef, 0x18, 0x65, 0x27, 0xbf, 0x23, 0xbc,
	0x34, 0x66, 0x33, 0x93, 0x46, 0x81, 0xeb, 0x8e, 0xde, 0xea, 0xd5, 0x33, 0x59, 0x8a, 0x9c, 0x3e,
	0xdb, 0xb7, 0x33, 0x7d, 0xb6, 0x3e, 0x7a, 0xd2, 0x38, 0x85, 0xe7, 0xd2, 0xeb, 0x72, 0x32, 0xfa,
	0xd5, 0x6f, 0x7f, 0x7d, 0x5d, 0xaa, 0x5b, 0x17, 0x12, 0xc1, 0xff, 0xd2, 0x6c, 0xbc, 0xab, 0xb1,
	0xe0, 0x9f, 0x81, 0xa7, 0xa4, 0xb3, 0xe2, 0x44, 0xdc, 0x33, 0xfa, 0xee, 0x04, 0x11, 0x6f, 0xd3,
	0xe8, 0xa1, 0x93, 0xae, 0x8d, 0x7a, 0xfa, 0x4a, 0xc8, 0x9f, 0x08, 0x93, 0xd1, 0x6d, 0x4c, 0xae,
	0x14, 0x60, 0x34, 0x76, 0xf5, 0x57, 0xaf, 0x3e, 0x63, 0xb4, 0xd9, 0x8b, 0xd6, 0x2d, 0xcd, 0xea,
	0x7d, 0xab, 0xa9, 0x59, 0x25, 0xfd, 0x3d, 0x8a, 0x53, 0x46, 0xc9, 0x59, 0x79, 0x58, 0x17, 0x23,
	0x49, 0xeb, 0x68, 0x85, 0xfc, 0x8c, 0x70, 0x39, 0xb7, 0x7f, 0xc9, 0x5b, 0x05, 0xe0, 0x8d, 0xca,
	0x4c, 0xf5, 0xed, 0x69, 0xc3, 0x52, 0x3a, 0x97, 0x35, 0x9d, 0x35, 0x32, 0x75, 0x93, 0xc8, 0xf7,
	0x08, 0x2f, 0x1c, 0xac, 0x64, 0x72, 0xb1, 0xc0, 0xfd, 0xc3, 0x0b, 0xbc, 0x5a, 0x7c, 0x7b, 0x0e,
	0xe1, 0x9c, 0xa2, 0xec, 0xe4, 0x57, 0x84, 0xff, 0x95, 0x17, 0x03, 0x52, 0xa4, 0x54, 0x87, 0xa8,
	0xc7, 0xa4, 0x57, 0xf0, 0xc9, 0x51, 0xaf, 0xa0, 0xb1, 0x76, 0x49, 0x03, 0x37, 0xb8, 0xec, 0x69,
	0xc6, 0x26, 0x7b, 0x0c, 0x09, 0x8f, 0xbc, 0x66, 0x14, 0xe2, 0x71, 0x88, 0xc8, 0x14, 0xe0, 0x71,
	0x1e, 0x9f, 0x1e, 0xd6, 0xc4, 0xf7, 0x3a, 0xb1, 0xba, 0x3f, 0x42, 0x6b, 0x6d, 0x65, 0xfa, 0x7e,
	0xfc, 0x82, 0x70, 0x39, 0xa7, 0x65, 0x85, 0x06, 0x7e, 0x54, 0xfb, 0x9e, 0xaf, 0x1b, 0xd6, 0x95,
	0xa9, 0x5f, 0x2f, 0xed, 0x43, 0x48, 0x9e, 0xed, 0x53, 0x84, 0x17, 0x87, 0xc5, 0x91, 0xd4, 0x0b,
	0xad, 0x96, 0x43, 0x15, 0x75, 0x12, 0x1f, 0xef, 0x28, 0x3e, 0xd7, 0xad, 0xc6, 0x33, 0x6c, 0xa3,
	0x41, 0x1c, 0x09, 0xa9, 0xa4, 0x35, 0x39, 0x39, 0x2d, 0xd4, 0x9a, 0x51, 0xf9, 0x7d, 0xe1, 0xad,
	0xf1, 0x61, 0xa0, 0x35, 0x8f, 0x11, 0x3e, 0x31, 0x20, 0xd0, 0xe4, 0x52, 0x01, 0x1e, 0x87, 0x49,
	0xfa, 0x24, 0x26, 0x9f, 0x1e, 0xc5, 0xa4, 0x69, 0xbd, 0x3b, 0x35, 0x93, 0x5e, 0x1e, 0x44, 0x1d,
	0xad, 0x54, 0xb7, 0x9f, 0x34, 0x6a, 0xa3, 0x70, 0x0d, 0x28, 0x1a, 0x87, 0xd2, 0xf6, 0x78, 0xe7,
	0x69, 0xc3, 0xde, 0x53, 0x2a, 0x96, 0x75, 0xc7, 0xd9, 0xdf, 0xdf, 0x1f, 0x3a, 0x74, 0x68, 0x57,
	0xed, 0x99, 0xff, 0xc4, 0xdf, 0x88, 0x23, 0xaa, 0x76, 0xb9, 0xe8, 0xac, 0xff, 0x8d, 0xf0, 0x2b,
	0x1e, 0xef, 0x4c, 0xae, 0xca, 0xfa, 0x99, 0x71, 0x7f, 0x72, 0x6c, 0x25, 0x8b, 0x61, 0x0b, 0x7d,
	0xdc, 0x4a, 0x73, 0x04, 0x3c, 0xa2, 0x2c, 0xb0, 0xb9, 0x08, 0x9c, 0x00, 0x98, 0x5e, 0x1b, 0x4e,
	0x1f, 0xc9, 0x11, 0x3f, 0x05, 0xbc, 0x33, 0x62, 0x7c, 0x54, 0x9a, 0xbd, 0xd1, 0xdc, 0xbc, 0xf9,
	0x43, 0xe9, 0xdc, 0x0d, 0x93, 0xbb, 0xa9, 0xf1, 0x8d, 0x20, 0xb1, 0x77, 0x56, 0x9f, 0x64, 0x3e,
	0x77, 0xb5, 0xcf, 0xdd, 0x11, 0x9f, 0xbb, 0x3b, 0xab, 0xed, 0x39, 0x8d, 0xe6, 0xe2, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xfe, 0x92, 0x4b, 0xa7, 0x3d, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ManagedIdentitiesServiceClient is the client API for ManagedIdentitiesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManagedIdentitiesServiceClient interface {
	// Creates a Microsoft AD domain.
	CreateMicrosoftAdDomain(ctx context.Context, in *CreateMicrosoftAdDomainRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Resets a domain's administrator password.
	ResetAdminPassword(ctx context.Context, in *ResetAdminPasswordRequest, opts ...grpc.CallOption) (*ResetAdminPasswordResponse, error)
	// Lists domains in a project.
	ListDomains(ctx context.Context, in *ListDomainsRequest, opts ...grpc.CallOption) (*ListDomainsResponse, error)
	// Gets information about a domain.
	GetDomain(ctx context.Context, in *GetDomainRequest, opts ...grpc.CallOption) (*Domain, error)
	// Updates the metadata and configuration of a domain.
	UpdateDomain(ctx context.Context, in *UpdateDomainRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Deletes a domain.
	DeleteDomain(ctx context.Context, in *DeleteDomainRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Adds an AD trust to a domain.
	AttachTrust(ctx context.Context, in *AttachTrustRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Updates the DNS conditional forwarder.
	ReconfigureTrust(ctx context.Context, in *ReconfigureTrustRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Removes an AD trust.
	DetachTrust(ctx context.Context, in *DetachTrustRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Validates a trust state, that the target domain is reachable, and that the
	// target domain is able to accept incoming trust requests.
	ValidateTrust(ctx context.Context, in *ValidateTrustRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
}

type managedIdentitiesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewManagedIdentitiesServiceClient(cc grpc.ClientConnInterface) ManagedIdentitiesServiceClient {
	return &managedIdentitiesServiceClient{cc}
}

func (c *managedIdentitiesServiceClient) CreateMicrosoftAdDomain(ctx context.Context, in *CreateMicrosoftAdDomainRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.cloud.managedidentities.v1.ManagedIdentitiesService/CreateMicrosoftAdDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managedIdentitiesServiceClient) ResetAdminPassword(ctx context.Context, in *ResetAdminPasswordRequest, opts ...grpc.CallOption) (*ResetAdminPasswordResponse, error) {
	out := new(ResetAdminPasswordResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.managedidentities.v1.ManagedIdentitiesService/ResetAdminPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managedIdentitiesServiceClient) ListDomains(ctx context.Context, in *ListDomainsRequest, opts ...grpc.CallOption) (*ListDomainsResponse, error) {
	out := new(ListDomainsResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.managedidentities.v1.ManagedIdentitiesService/ListDomains", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managedIdentitiesServiceClient) GetDomain(ctx context.Context, in *GetDomainRequest, opts ...grpc.CallOption) (*Domain, error) {
	out := new(Domain)
	err := c.cc.Invoke(ctx, "/google.cloud.managedidentities.v1.ManagedIdentitiesService/GetDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managedIdentitiesServiceClient) UpdateDomain(ctx context.Context, in *UpdateDomainRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.cloud.managedidentities.v1.ManagedIdentitiesService/UpdateDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managedIdentitiesServiceClient) DeleteDomain(ctx context.Context, in *DeleteDomainRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.cloud.managedidentities.v1.ManagedIdentitiesService/DeleteDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managedIdentitiesServiceClient) AttachTrust(ctx context.Context, in *AttachTrustRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.cloud.managedidentities.v1.ManagedIdentitiesService/AttachTrust", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managedIdentitiesServiceClient) ReconfigureTrust(ctx context.Context, in *ReconfigureTrustRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.cloud.managedidentities.v1.ManagedIdentitiesService/ReconfigureTrust", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managedIdentitiesServiceClient) DetachTrust(ctx context.Context, in *DetachTrustRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.cloud.managedidentities.v1.ManagedIdentitiesService/DetachTrust", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managedIdentitiesServiceClient) ValidateTrust(ctx context.Context, in *ValidateTrustRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.cloud.managedidentities.v1.ManagedIdentitiesService/ValidateTrust", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ManagedIdentitiesServiceServer is the server API for ManagedIdentitiesService service.
type ManagedIdentitiesServiceServer interface {
	// Creates a Microsoft AD domain.
	CreateMicrosoftAdDomain(context.Context, *CreateMicrosoftAdDomainRequest) (*longrunning.Operation, error)
	// Resets a domain's administrator password.
	ResetAdminPassword(context.Context, *ResetAdminPasswordRequest) (*ResetAdminPasswordResponse, error)
	// Lists domains in a project.
	ListDomains(context.Context, *ListDomainsRequest) (*ListDomainsResponse, error)
	// Gets information about a domain.
	GetDomain(context.Context, *GetDomainRequest) (*Domain, error)
	// Updates the metadata and configuration of a domain.
	UpdateDomain(context.Context, *UpdateDomainRequest) (*longrunning.Operation, error)
	// Deletes a domain.
	DeleteDomain(context.Context, *DeleteDomainRequest) (*longrunning.Operation, error)
	// Adds an AD trust to a domain.
	AttachTrust(context.Context, *AttachTrustRequest) (*longrunning.Operation, error)
	// Updates the DNS conditional forwarder.
	ReconfigureTrust(context.Context, *ReconfigureTrustRequest) (*longrunning.Operation, error)
	// Removes an AD trust.
	DetachTrust(context.Context, *DetachTrustRequest) (*longrunning.Operation, error)
	// Validates a trust state, that the target domain is reachable, and that the
	// target domain is able to accept incoming trust requests.
	ValidateTrust(context.Context, *ValidateTrustRequest) (*longrunning.Operation, error)
}

// UnimplementedManagedIdentitiesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedManagedIdentitiesServiceServer struct {
}

func (*UnimplementedManagedIdentitiesServiceServer) CreateMicrosoftAdDomain(ctx context.Context, req *CreateMicrosoftAdDomainRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMicrosoftAdDomain not implemented")
}
func (*UnimplementedManagedIdentitiesServiceServer) ResetAdminPassword(ctx context.Context, req *ResetAdminPasswordRequest) (*ResetAdminPasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetAdminPassword not implemented")
}
func (*UnimplementedManagedIdentitiesServiceServer) ListDomains(ctx context.Context, req *ListDomainsRequest) (*ListDomainsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDomains not implemented")
}
func (*UnimplementedManagedIdentitiesServiceServer) GetDomain(ctx context.Context, req *GetDomainRequest) (*Domain, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDomain not implemented")
}
func (*UnimplementedManagedIdentitiesServiceServer) UpdateDomain(ctx context.Context, req *UpdateDomainRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDomain not implemented")
}
func (*UnimplementedManagedIdentitiesServiceServer) DeleteDomain(ctx context.Context, req *DeleteDomainRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDomain not implemented")
}
func (*UnimplementedManagedIdentitiesServiceServer) AttachTrust(ctx context.Context, req *AttachTrustRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachTrust not implemented")
}
func (*UnimplementedManagedIdentitiesServiceServer) ReconfigureTrust(ctx context.Context, req *ReconfigureTrustRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReconfigureTrust not implemented")
}
func (*UnimplementedManagedIdentitiesServiceServer) DetachTrust(ctx context.Context, req *DetachTrustRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachTrust not implemented")
}
func (*UnimplementedManagedIdentitiesServiceServer) ValidateTrust(ctx context.Context, req *ValidateTrustRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateTrust not implemented")
}

func RegisterManagedIdentitiesServiceServer(s *grpc.Server, srv ManagedIdentitiesServiceServer) {
	s.RegisterService(&_ManagedIdentitiesService_serviceDesc, srv)
}

func _ManagedIdentitiesService_CreateMicrosoftAdDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMicrosoftAdDomainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagedIdentitiesServiceServer).CreateMicrosoftAdDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.managedidentities.v1.ManagedIdentitiesService/CreateMicrosoftAdDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagedIdentitiesServiceServer).CreateMicrosoftAdDomain(ctx, req.(*CreateMicrosoftAdDomainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagedIdentitiesService_ResetAdminPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetAdminPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagedIdentitiesServiceServer).ResetAdminPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.managedidentities.v1.ManagedIdentitiesService/ResetAdminPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagedIdentitiesServiceServer).ResetAdminPassword(ctx, req.(*ResetAdminPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagedIdentitiesService_ListDomains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDomainsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagedIdentitiesServiceServer).ListDomains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.managedidentities.v1.ManagedIdentitiesService/ListDomains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagedIdentitiesServiceServer).ListDomains(ctx, req.(*ListDomainsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagedIdentitiesService_GetDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDomainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagedIdentitiesServiceServer).GetDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.managedidentities.v1.ManagedIdentitiesService/GetDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagedIdentitiesServiceServer).GetDomain(ctx, req.(*GetDomainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagedIdentitiesService_UpdateDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDomainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagedIdentitiesServiceServer).UpdateDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.managedidentities.v1.ManagedIdentitiesService/UpdateDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagedIdentitiesServiceServer).UpdateDomain(ctx, req.(*UpdateDomainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagedIdentitiesService_DeleteDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDomainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagedIdentitiesServiceServer).DeleteDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.managedidentities.v1.ManagedIdentitiesService/DeleteDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagedIdentitiesServiceServer).DeleteDomain(ctx, req.(*DeleteDomainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagedIdentitiesService_AttachTrust_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachTrustRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagedIdentitiesServiceServer).AttachTrust(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.managedidentities.v1.ManagedIdentitiesService/AttachTrust",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagedIdentitiesServiceServer).AttachTrust(ctx, req.(*AttachTrustRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagedIdentitiesService_ReconfigureTrust_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReconfigureTrustRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagedIdentitiesServiceServer).ReconfigureTrust(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.managedidentities.v1.ManagedIdentitiesService/ReconfigureTrust",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagedIdentitiesServiceServer).ReconfigureTrust(ctx, req.(*ReconfigureTrustRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagedIdentitiesService_DetachTrust_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetachTrustRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagedIdentitiesServiceServer).DetachTrust(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.managedidentities.v1.ManagedIdentitiesService/DetachTrust",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagedIdentitiesServiceServer).DetachTrust(ctx, req.(*DetachTrustRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagedIdentitiesService_ValidateTrust_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateTrustRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagedIdentitiesServiceServer).ValidateTrust(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.managedidentities.v1.ManagedIdentitiesService/ValidateTrust",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagedIdentitiesServiceServer).ValidateTrust(ctx, req.(*ValidateTrustRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ManagedIdentitiesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.cloud.managedidentities.v1.ManagedIdentitiesService",
	HandlerType: (*ManagedIdentitiesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMicrosoftAdDomain",
			Handler:    _ManagedIdentitiesService_CreateMicrosoftAdDomain_Handler,
		},
		{
			MethodName: "ResetAdminPassword",
			Handler:    _ManagedIdentitiesService_ResetAdminPassword_Handler,
		},
		{
			MethodName: "ListDomains",
			Handler:    _ManagedIdentitiesService_ListDomains_Handler,
		},
		{
			MethodName: "GetDomain",
			Handler:    _ManagedIdentitiesService_GetDomain_Handler,
		},
		{
			MethodName: "UpdateDomain",
			Handler:    _ManagedIdentitiesService_UpdateDomain_Handler,
		},
		{
			MethodName: "DeleteDomain",
			Handler:    _ManagedIdentitiesService_DeleteDomain_Handler,
		},
		{
			MethodName: "AttachTrust",
			Handler:    _ManagedIdentitiesService_AttachTrust_Handler,
		},
		{
			MethodName: "ReconfigureTrust",
			Handler:    _ManagedIdentitiesService_ReconfigureTrust_Handler,
		},
		{
			MethodName: "DetachTrust",
			Handler:    _ManagedIdentitiesService_DetachTrust_Handler,
		},
		{
			MethodName: "ValidateTrust",
			Handler:    _ManagedIdentitiesService_ValidateTrust_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/cloud/managedidentities/v1/managed_identities_service.proto",
}
