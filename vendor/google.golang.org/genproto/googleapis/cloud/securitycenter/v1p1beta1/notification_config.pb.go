// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/securitycenter/v1p1beta1/notification_config.proto

package securitycenter

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The type of events.
type NotificationConfig_EventType int32

const (
	// Unspecified event type.
	NotificationConfig_EVENT_TYPE_UNSPECIFIED NotificationConfig_EventType = 0
	// Events for findings.
	NotificationConfig_FINDING NotificationConfig_EventType = 1
)

var NotificationConfig_EventType_name = map[int32]string{
	0: "EVENT_TYPE_UNSPECIFIED",
	1: "FINDING",
}

var NotificationConfig_EventType_value = map[string]int32{
	"EVENT_TYPE_UNSPECIFIED": 0,
	"FINDING":                1,
}

func (x NotificationConfig_EventType) String() string {
	return proto.EnumName(NotificationConfig_EventType_name, int32(x))
}

func (NotificationConfig_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4c034a8341e15b36, []int{0, 0}
}

// Cloud Security Command Center (Cloud SCC) notification configs.
//
// A notification config is a Cloud SCC resource that contains the configuration
// to send notifications for create/update events of findings, assets and etc.
type NotificationConfig struct {
	// The relative resource name of this notification config. See:
	// https://cloud.google.com/apis/design/resource_names#relative_resource_name
	// Example:
	// "organizations/{organization_id}/notificationConfigs/notify_public_bucket".
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The description of the notification config (max of 1024 characters).
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The type of events the config is for, e.g. FINDING.
	EventType NotificationConfig_EventType `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3,enum=google.cloud.securitycenter.v1p1beta1.NotificationConfig_EventType" json:"event_type,omitempty"`
	// The PubSub topic to send notifications to. Its format is
	// "projects/[project_id]/topics/[topic]".
	PubsubTopic string `protobuf:"bytes,4,opt,name=pubsub_topic,json=pubsubTopic,proto3" json:"pubsub_topic,omitempty"`
	// Output only. The service account that needs "pubsub.topics.publish"
	// permission to publish to the PubSub topic.
	ServiceAccount string `protobuf:"bytes,5,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	// The config for triggering notifications.
	//
	// Types that are valid to be assigned to NotifyConfig:
	//	*NotificationConfig_StreamingConfig_
	NotifyConfig         isNotificationConfig_NotifyConfig `protobuf_oneof:"notify_config"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *NotificationConfig) Reset()         { *m = NotificationConfig{} }
func (m *NotificationConfig) String() string { return proto.CompactTextString(m) }
func (*NotificationConfig) ProtoMessage()    {}
func (*NotificationConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c034a8341e15b36, []int{0}
}

func (m *NotificationConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotificationConfig.Unmarshal(m, b)
}
func (m *NotificationConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotificationConfig.Marshal(b, m, deterministic)
}
func (m *NotificationConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationConfig.Merge(m, src)
}
func (m *NotificationConfig) XXX_Size() int {
	return xxx_messageInfo_NotificationConfig.Size(m)
}
func (m *NotificationConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationConfig proto.InternalMessageInfo

func (m *NotificationConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NotificationConfig) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *NotificationConfig) GetEventType() NotificationConfig_EventType {
	if m != nil {
		return m.EventType
	}
	return NotificationConfig_EVENT_TYPE_UNSPECIFIED
}

func (m *NotificationConfig) GetPubsubTopic() string {
	if m != nil {
		return m.PubsubTopic
	}
	return ""
}

func (m *NotificationConfig) GetServiceAccount() string {
	if m != nil {
		return m.ServiceAccount
	}
	return ""
}

type isNotificationConfig_NotifyConfig interface {
	isNotificationConfig_NotifyConfig()
}

type NotificationConfig_StreamingConfig_ struct {
	StreamingConfig *NotificationConfig_StreamingConfig `protobuf:"bytes,6,opt,name=streaming_config,json=streamingConfig,proto3,oneof"`
}

func (*NotificationConfig_StreamingConfig_) isNotificationConfig_NotifyConfig() {}

func (m *NotificationConfig) GetNotifyConfig() isNotificationConfig_NotifyConfig {
	if m != nil {
		return m.NotifyConfig
	}
	return nil
}

func (m *NotificationConfig) GetStreamingConfig() *NotificationConfig_StreamingConfig {
	if x, ok := m.GetNotifyConfig().(*NotificationConfig_StreamingConfig_); ok {
		return x.StreamingConfig
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*NotificationConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*NotificationConfig_StreamingConfig_)(nil),
	}
}

// The config for streaming-based notifications, which send each event as soon
// as it is detected.
type NotificationConfig_StreamingConfig struct {
	// Expression that defines the filter to apply across create/update events
	// of assets or findings as specified by the event type. The expression is a
	// list of zero or more restrictions combined via logical operators `AND`
	// and `OR`. Parentheses are supported, and `OR` has higher precedence than
	// `AND`.
	//
	// Restrictions have the form `<field> <operator> <value>` and may have a
	// `-` character in front of them to indicate negation. The fields map to
	// those defined in the corresponding resource.
	//
	// The supported operators are:
	//
	// * `=` for all value types.
	// * `>`, `<`, `>=`, `<=` for integer values.
	// * `:`, meaning substring matching, for strings.
	//
	// The supported value types are:
	//
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals `true` and `false` without quotes.
	Filter               string   `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotificationConfig_StreamingConfig) Reset()         { *m = NotificationConfig_StreamingConfig{} }
func (m *NotificationConfig_StreamingConfig) String() string { return proto.CompactTextString(m) }
func (*NotificationConfig_StreamingConfig) ProtoMessage()    {}
func (*NotificationConfig_StreamingConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c034a8341e15b36, []int{0, 0}
}

func (m *NotificationConfig_StreamingConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotificationConfig_StreamingConfig.Unmarshal(m, b)
}
func (m *NotificationConfig_StreamingConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotificationConfig_StreamingConfig.Marshal(b, m, deterministic)
}
func (m *NotificationConfig_StreamingConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationConfig_StreamingConfig.Merge(m, src)
}
func (m *NotificationConfig_StreamingConfig) XXX_Size() int {
	return xxx_messageInfo_NotificationConfig_StreamingConfig.Size(m)
}
func (m *NotificationConfig_StreamingConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationConfig_StreamingConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationConfig_StreamingConfig proto.InternalMessageInfo

func (m *NotificationConfig_StreamingConfig) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func init() {
	proto.RegisterEnum("google.cloud.securitycenter.v1p1beta1.NotificationConfig_EventType", NotificationConfig_EventType_name, NotificationConfig_EventType_value)
	proto.RegisterType((*NotificationConfig)(nil), "google.cloud.securitycenter.v1p1beta1.NotificationConfig")
	proto.RegisterType((*NotificationConfig_StreamingConfig)(nil), "google.cloud.securitycenter.v1p1beta1.NotificationConfig.StreamingConfig")
}

func init() {
	proto.RegisterFile("google/cloud/securitycenter/v1p1beta1/notification_config.proto", fileDescriptor_4c034a8341e15b36)
}

var fileDescriptor_4c034a8341e15b36 = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x5e, 0xba, 0x1f, 0x34, 0x17, 0xd6, 0xc9, 0x17, 0x53, 0x28, 0x20, 0xca, 0xa4, 0x49, 0x9d,
	0x84, 0x62, 0x3a, 0xb8, 0x0a, 0x17, 0xd0, 0x66, 0xd9, 0xe8, 0x4d, 0x55, 0xb5, 0x65, 0x12, 0x68,
	0x52, 0x94, 0x78, 0x6e, 0x30, 0x6a, 0xed, 0xc8, 0x76, 0x2a, 0x75, 0x55, 0x5f, 0x80, 0x47, 0xe1,
	0x29, 0xb8, 0xe6, 0x29, 0xb8, 0xee, 0x23, 0x70, 0x85, 0x62, 0xa7, 0xa3, 0x29, 0x13, 0x4c, 0x5c,
	0xc5, 0xe7, 0x7c, 0x5f, 0xbe, 0xf3, 0xd9, 0xe7, 0x1c, 0xf0, 0x26, 0xe6, 0x3c, 0x1e, 0x11, 0x84,
	0x47, 0x3c, 0xbd, 0x42, 0x92, 0xe0, 0x54, 0x50, 0x35, 0xc5, 0x84, 0x29, 0x22, 0xd0, 0xa4, 0x91,
	0x34, 0x22, 0xa2, 0xc2, 0x06, 0x62, 0x5c, 0xd1, 0x21, 0xc5, 0xa1, 0xa2, 0x9c, 0x05, 0x98, 0xb3,
	0x21, 0x8d, 0x9d, 0x44, 0x70, 0xc5, 0xe1, 0x91, 0x11, 0x70, 0xb4, 0x80, 0x53, 0x14, 0x70, 0x6e,
	0x04, 0xaa, 0x8f, 0xf3, 0x3a, 0x61, 0x42, 0x51, 0xc8, 0x18, 0x57, 0x5a, 0x4a, 0x1a, 0x91, 0xea,
	0xd3, 0x15, 0x74, 0x48, 0xc9, 0xe8, 0x2a, 0x88, 0xc8, 0xa7, 0x70, 0x42, 0xb9, 0xc8, 0x09, 0x0f,
	0x57, 0x08, 0x82, 0x48, 0x9e, 0x0a, 0x4c, 0x0c, 0x74, 0xf8, 0x65, 0x1b, 0xc0, 0xce, 0x8a, 0x3d,
	0x4f, 0xbb, 0x83, 0x10, 0x6c, 0xb1, 0x70, 0x4c, 0x6c, 0xab, 0x66, 0xd5, 0x77, 0x7b, 0xfa, 0x0c,
	0x6b, 0xa0, 0x7c, 0x45, 0x24, 0x16, 0x34, 0xc9, 0x88, 0x76, 0x49, 0x43, 0xab, 0x29, 0x18, 0x01,
	0x40, 0x26, 0x84, 0xa9, 0x40, 0x4d, 0x13, 0x62, 0x6f, 0xd6, 0xac, 0xfa, 0xde, 0x89, 0xe7, 0xdc,
	0xe9, 0x8a, 0xce, 0x9f, 0x26, 0x1c, 0x3f, 0xd3, 0x1a, 0x4c, 0x13, 0xd2, 0xdb, 0x25, 0xcb, 0x23,
	0xf4, 0xc0, 0xfd, 0x24, 0x8d, 0x64, 0x1a, 0x05, 0x8a, 0x27, 0x14, 0xdb, 0x5b, 0x99, 0x8d, 0x56,
	0xed, 0x67, 0xf3, 0x09, 0x78, 0x64, 0x80, 0xbc, 0x60, 0x98, 0x50, 0xe9, 0x60, 0x3e, 0x46, 0x83,
	0x8c, 0xd7, 0x2b, 0x1b, 0x50, 0x07, 0xf0, 0x39, 0xa8, 0x48, 0x22, 0x26, 0x14, 0x93, 0x20, 0xc4,
	0x98, 0xa7, 0x4c, 0xd9, 0xdb, 0x5a, 0x67, 0xf3, 0x47, 0x73, 0xb3, 0xb7, 0x97, 0x63, 0x4d, 0x03,
	0xc1, 0x09, 0xd8, 0x97, 0x4a, 0x90, 0x70, 0x4c, 0x59, 0x9c, 0xb7, 0xcf, 0xde, 0xa9, 0x59, 0xf5,
	0xf2, 0x49, 0xfb, 0xff, 0x2f, 0xd7, 0x5f, 0x2a, 0x9a, 0xf8, 0xdd, 0x46, 0xaf, 0x22, 0x8b, 0xa9,
	0xea, 0x31, 0xa8, 0xac, 0xb1, 0xe0, 0x01, 0xd8, 0x19, 0xd2, 0x91, 0x22, 0x22, 0xef, 0x4c, 0x1e,
	0x1d, 0xbe, 0x02, 0xbb, 0x37, 0xaf, 0x05, 0xab, 0xe0, 0xc0, 0xbf, 0xf0, 0x3b, 0x83, 0x60, 0xf0,
	0xa1, 0xeb, 0x07, 0xef, 0x3b, 0xfd, 0xae, 0xef, 0xb5, 0xcf, 0xda, 0xfe, 0xe9, 0xfe, 0x06, 0x2c,
	0x83, 0x7b, 0x67, 0xed, 0xce, 0x69, 0xbb, 0x73, 0xbe, 0x6f, 0xb9, 0xf3, 0x45, 0xf3, 0x1a, 0xbc,
	0x58, 0x73, 0xbd, 0xf6, 0x7a, 0xb7, 0x0c, 0xc7, 0x19, 0x17, 0x71, 0xc8, 0xe8, 0xb5, 0x19, 0x42,
	0x34, 0x5b, 0x0d, 0xe7, 0x85, 0x61, 0x37, 0x3f, 0x48, 0x34, 0xbb, 0x65, 0x03, 0xe6, 0xad, 0x0a,
	0x78, 0xa0, 0xf3, 0xd3, 0x3c, 0xd3, 0xfa, 0x56, 0x5a, 0x34, 0xdf, 0xfe, 0xb5, 0x8d, 0xf0, 0x59,
	0x22, 0xf8, 0x67, 0x82, 0x95, 0x44, 0xb3, 0xfc, 0x34, 0x47, 0x7a, 0x10, 0x24, 0x9a, 0xe9, 0xef,
	0x1c, 0x1c, 0x63, 0x3e, 0xbe, 0x5b, 0x5f, 0xba, 0xd6, 0xc7, 0x7e, 0x4e, 0x8c, 0xf9, 0x28, 0x64,
	0xb1, 0xc3, 0x45, 0x8c, 0x62, 0xc2, 0xf4, 0x6e, 0xa0, 0xdf, 0x06, 0xfe, 0xb1, 0xe0, 0xaf, 0x8b,
	0xc0, 0xd7, 0xd2, 0xd1, 0xb9, 0x51, 0xf5, 0x74, 0xf9, 0x7e, 0x8e, 0x7a, 0xa6, 0xfc, 0x45, 0xa3,
	0xdb, 0x68, 0x65, 0xbf, 0x7d, 0x5f, 0xf2, 0x2e, 0x35, 0xef, 0xb2, 0xc8, 0xbb, 0xbc, 0x58, 0xca,
	0x2f, 0x4a, 0x75, 0xc3, 0x73, 0x5d, 0x4d, 0x74, 0xdd, 0x22, 0xd3, 0x75, 0x33, 0xaa, 0x96, 0x8c,
	0x76, 0xb4, 0xf5, 0x97, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x35, 0x51, 0x36, 0xec, 0x9a, 0x04,
	0x00, 0x00,
}
